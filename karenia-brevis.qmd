---
title: "karenia-brevis"
format: html
---

```{r}
#setup, include=FALSE
knitr::opts_chunk$set(echo = TRUE)
library(broom)
library(visdat)
library(tidyr)
library(tidyverse)
library(tidymodels)
library(lubridate)
library(outliers)
library(patchwork)
library(mgcv)
library(tibble)
library(randomForest)
```
Load data
```{r}
karenia_brevis<-read_csv("C:/Users/samho/Desktop/ESS330/github/ESS330-results-discussion/habsos_20220225.csv")


#filter data to only include between 
# Filter the data frame directly in one step
filtered_karenia <- karenia_brevis%>%
  filter(LATITUDE >= 26.25 & LATITUDE<= 27.9044 & 
         LONGITUDE >= -82.8600 & LONGITUDE <= -82.1472)

#select columns we want
filtered_karenia <- filtered_karenia %>%
  select(
    STATE_ID,
    DESCRIPTION,
    LATITUDE,
    LONGITUDE,
    SAMPLE_DATE,
    SAMPLE_DEPTH,
    CELLCOUNT,
    SALINITY,
    WATER_TEMP,
  )


#change data frame to tibble
filtered_karenia <- as_tibble(filtered_karenia)

#library(lubridate)
#change the date format, currently character


#change the data format from charachter to date and manually change the 2 digit year to interpret correctly
filtered_karenia <- filtered_karenia %>%
  mutate(SAMPLE_DATE = parse_date_time(SAMPLE_DATE, orders = "d-b-y I.M.S p"),
         SAMPLE_DATE = if_else(year(SAMPLE_DATE) > 2024, SAMPLE_DATE %m-% years(100), SAMPLE_DATE))

#format date from character to date
filtered_karenia <- filtered_karenia %>%
  mutate(SAMPLE_DATE = as.Date(SAMPLE_DATE, format = "%d-%m-%Y"))

#remove na values
filtered_karenia <- filtered_karenia %>%
  drop_na()

#check correlation
filtered_karenia %>%
  select(where(is.numeric)) %>%
  vis_cor()

#filter to only show rows with cells greater >0
filtered_karenia1 <- filtered_karenia %>%
  filter(CELLCOUNT > 0)

#now format date from character to actual date
filtered_karenia1 <- filtered_karenia %>%
  mutate(SAMPLE_DATE = as.Date(SAMPLE_DATE, format = "%d-%m-%Y"))


#check correlation. Doesn't show any strong relationships, curious. It's because it assumes a linear relationship. Multiple complex interactions
filtered_karenia1 %>%
  select(where(is.numeric)) %>%
  vis_cor()


```
There's a lot of missing dating in the temperature, wind direction, wind direction unit, wind speed, and salinity columns. This is because the dataset is reporting on daily data. This problem can be fixed by taking averages for each month in the data.

Data Visualizations:
```{r}

#scatter plot of the cell counts and salinity with dates shown
plot<- filtered_karenia %>%
  ggplot(aes(x = SALINITY, y = CELLCOUNT, color= SAMPLE_DATE, alpha= .05)) +
  geom_point() +
  labs(title = "Salinity And Redtide Cell Counts Over Time",
subtitle = "Cell count measured in cells/L, salinity measured in part per thousand/L")


print(plot)

ggsave("salinity-cellcount.png", plot = plot, width = 6, height = 4, dpi = 300)

#scatter plot of the cell counts and salinity. Shows relationship!
 salinity_cellcount2<- filtered_karenia1 %>%
  ggplot(aes(x = SALINITY, y = CELLCOUNT, color= , alpha= .05)) +
  geom_point() +
   labs(title = "Salinity And Redtide Cell Counts",
subtitle = "Cell count measured in cells/L, salinity measured in part per thousand/L") 
 
 ggsave("salinity-cellcount2.png", plot = salinity_cellcount2, width = 6, height = 4, dpi = 300)
 
 #graph of water temp and cell count relationship. There's one!
watertemp_cellcount<- filtered_karenia1 %>%
ggplot(aes(x = WATER_TEMP, y = CELLCOUNT, color= CELLCOUNT)) +
 geom_point() +
labs(title = "Water Temperatures Affects of Redtide Cell Counts",
subtitle = "Cell count measured in cells/L, water temperature measured in celsius")

ggsave("temp_cell.png", plot = watertemp_cellcount, width = 6, height = 4, dpi = 300)

#cell count and date
date_cellcount <-filtered_karenia1 %>%
  ggplot(aes(x = SAMPLE_DATE, y = CELLCOUNT, color= , alpha= .05)) +
  geom_point() +
  labs(title = "Yearly Affects of Redtide Cell Counts From 1954-2021",
subtitle = "Cell count measured in cells/L")


ggsave("date_cell.png", plot = date_cellcount, width = 6, height = 4, dpi = 300)
 

salinity_temp<- filtered_karenia1 %>%
  ggplot(aes(x = SALINITY, y = WATER_TEMP, color= CELLCOUNT , alpha= .02)) +
  geom_point() +
   labs(title = "Salinity & Water Temperature Conditions For Red Tide",
subtitle = "Water temperature in C, salinity in parts per thousand/L") 
 
ggsave("salinity_temp.png", plot = salinity_temp, width = 6, height = 4, dpi = 300)
```



Statistical Tests:
```{r}

#Convert SAMPLE_DATE to numeric day of year (1â€“365) for seasonal trend
filtered_karenia_days <- filtered_karenia1 %>%
  mutate(DAY_OF_YEAR = yday(SAMPLE_DATE))

#Fit the GAM model using DAY_OF_YEAR with bs = "cc":
#Fit GAM with interaction between salinity and water temp
gam_model <- gam(CELLCOUNT ~ 
                   te(SALINITY, WATER_TEMP) +  # interaction term
                   s(DAY_OF_YEAR, bs = "cc"),  # cyclic seasonal effect
                 family = quasipoisson(link = "log"),  # use for overdispersed count data
                 data = filtered_karenia_days
                 method = "REML")

# Fit a GAM model with non-linear smooths for SALINITY and WATER_TEMP
# and a time effect to account for seasonal or time-based trends
summary(gam_model)





filtered_karenia2<- filtered_karenia1 %>%
  mutate(SAMPLE_DATE = dmy_hms(SAMPLE_DATE),  # adjust to your format if needed
         DAY_OF_YEAR = yday(SAMPLE_DATE))

# 2. Fit GAM with interaction between salinity and water temp
gam_model <- gam(CELLCOUNT ~ 
                   te(SALINITY, WATER_TEMP) +  # interaction term
                   s(DAY_OF_YEAR, bs = "cc"),  # cyclic seasonal effect
                 family = quasipoisson(link = "log"),  # use for overdispersed count data
                 data = filtered_karenia_days,
                 method = "REML")

summary(gam_model)
plot(gam_model)

ggsave("gam_model.png", plot = gam, width = 6, height = 4, dpi = 300)
```

```{r}
#Now, let's fit the Random Forest model to predict CELLCOUNT from the other variables.
# Fit a random forest model to predict CELLCOUNT
rf_model <- randomForest(CELLCOUNT ~ SALINITY + WATER_TEMP + DAY_OF_YEAR, 
                         data = filtered_karenia_days, 
                         importance = TRUE, 
                         ntree = 500)  # ntree is the number of trees

# Print the model summary
print(rf_model)
```


using the Gam Model- This means you're modeling CELLCOUNT using:

te(SALINITY, WATER_TEMP): A tensor product smooth that models the interaction between salinity and water temperature.

s(DAY_OF_YEAR, bs = "cc"): A cyclical smooth for the day of the year, capturing seasonality (since day 1 and day 365 are close to each other in time).

Parametric Coefficients:
(Intercept): The baseline level of CELLCOUNT when all predictor variables are at their reference values (e.g., average).

Estimate: 12.69 (the intercept for the model).

p-value: < 2e-16, indicating that the intercept is highly significant.

Smooth Terms:
te(SALINITY, WATER_TEMP): The interaction between salinity and water temperature.

edf (Effective Degrees of Freedom) = 16.048: Indicates the complexity of the smooth term. Higher values suggest a more complex relationship.

F-statistic = 4.481: The test statistic for significance. A larger F-value suggests a more significant interaction between salinity and water temperature.

p-value = < 2e-16: This very small p-value indicates that the interaction between salinity and water temperature is highly significant.

s(DAY_OF_YEAR): The smooth term for day of the year.

edf = 7.736: The smooth term for day of year also has a moderately complex relationship, reflecting seasonal trends.

F-statistic = 6.900: Indicates a strong relationship between day of year and cell count.

p-value = < 2e-16: Again, the day of year has a highly significant effect on cell count.

Model Fit:
R-sq.(adj) = 0.00742: This indicates that the model explains 0.74% of the variance in cell count, adjusted for the number of predictors. This is quite low, meaning other factors not included in the model may influence cell count significantly.

Deviance explained = 8.96%: This metric is similar to R-squared but for models with a Poisson-like distribution (in this case, a quasipoisson). It means that the model explains about 9% of the variability in cell count. Again, this is relatively low, suggesting a lot of unexplained variation.

Conclusion:
The interaction between salinity and water temperature and the seasonality captured by day of year are both significant predictors of cell count.

However, the model fit is weak: the low R-squared and deviance explained values suggest there are other unaccounted factors that drive cell count.

The small p-values for both the interaction and day of year suggest that these factors are important predictors, but more data or additional predictors (like nutrients, precipitation, or wind) could improve the model.

 Consider adding other environmental variables (e.g., nutrients, wind speed), or another model like random forest, which can capture more complex relationships.

